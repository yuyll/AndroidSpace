package com.example.byget.loginService;

import java.io.ByteArrayOutputStream;
import java.io.IOException;
import java.io.InputStream;
import java.io.OutputStream;
import java.io.UnsupportedEncodingException;
import java.net.HttpURLConnection;
import java.net.MalformedURLException;
import java.net.URL;
import java.net.URLEncoder;
import java.util.LinkedList;
import java.util.List;

import javax.net.ssl.HttpsURLConnection;

import org.apache.http.HttpResponse;
import org.apache.http.NameValuePair;
import org.apache.http.client.ClientProtocolException;
import org.apache.http.client.HttpClient;
import org.apache.http.client.entity.UrlEncodedFormEntity;
import org.apache.http.client.methods.HttpGet;
import org.apache.http.client.methods.HttpPost;
import org.apache.http.conn.ClientConnectionManager;
import org.apache.http.impl.client.DefaultHttpClient;
import org.apache.http.impl.conn.DefaultClientConnection;
import org.apache.http.message.BasicNameValuePair;

import com.loopj.android.http.AsyncHttpClient;

public class LoginServiceUtils {
	public static String loginService(String username,String password){
		try {
			String path="http://10.20.120.75:8080/web/LoginService?username="+username+"&password="+password;
			URL url=new URL(path);
			HttpURLConnection conn=(HttpURLConnection) url.openConnection();	
			conn.setConnectTimeout(5000);
			conn.setRequestMethod("GET");
			int code=conn.getResponseCode();
			InputStream is=conn.getInputStream();
			ByteArrayOutputStream bos=new ByteArrayOutputStream();
			int len = 0;
			byte []b=new byte[1024];
			while ((len = is.read(b)) != -1){
				bos.write(b, 0, len);
			}
			is.close();
			bos.close();
			byte []newString=bos.toByteArray();
			return new String(newString);

			
		} catch (Exception e) {
			e.printStackTrace();
			return null;
		}
	}
	public static String loginService2(String username,String password){
		try {
			String path="http://10.20.120.75:8080/web/LoginService";		
			URL url=new URL(path);
			HttpURLConnection conn=(HttpURLConnection) url.openConnection();			
			conn.setConnectTimeout(5000);
			conn.setRequestMethod("POST");
			String data="username="+username+"&password="+password;
			conn.setRequestProperty("Content-Type","application/x-www-form-urlencoded");
			conn.setRequestProperty("Content-Length",data.length()+"");
			conn.setDoOutput(true);
//			int code=conn.getResponseCode();			
			OutputStream os=conn.getOutputStream();
			os.write(data.getBytes());
			InputStream is=conn.getInputStream();
			ByteArrayOutputStream bos=new ByteArrayOutputStream();
			int len=0;
			byte []buffer=new byte[1024];
			while((len=is.read(buffer))!=-1){
				bos.write(buffer, 0, len);
			}
			is.read();
			bos.close();
			String result=new String(bos.toByteArray());
			return result;
			
		} catch (Exception e) {
			e.printStackTrace();
			return null;
		}
	}
	public static String loginService3(String username,String password){
		try {
			HttpClient client=new DefaultHttpClient();
			String path="http://10.20.120.75:8080/web/LoginService?username="+URLEncoder.encode(username)+"&password="+URLEncoder.encode(password);
			HttpGet httpget=new HttpGet(path);
			HttpResponse response=client.execute(httpget);
			InputStream  is=response.getEntity().getContent();
			ByteArrayOutputStream bos=new ByteArrayOutputStream();
			int len = 0;
			byte []b=new byte[1024];
			while ((len = is.read(b)) != -1){
				bos.write(b, 0, len);
			}
			is.close();
			bos.close();
			byte []newString=bos.toByteArray();
			return new String(newString);

			
		} catch (Exception e) {
			e.printStackTrace();
			return null;
		}						
	}
	public static String loginService4(String username,String password){
			try {
				HttpClient client=new DefaultHttpClient();
				String path="http://10.20.120.75:8080/web/LoginService";
				HttpPost httppost=new HttpPost(path);
				List<NameValuePair> parameters=new LinkedList<NameValuePair>();
				parameters.add(new BasicNameValuePair("username", username));
				parameters.add(new BasicNameValuePair("password", password));	
				httppost.setEntity(new UrlEncodedFormEntity(parameters));
				HttpResponse response=client.execute(httppost);
				InputStream is=response.getEntity().getContent();
			} catch (Exception e) {
				e.printStackTrace();
			}
	}

	
}
